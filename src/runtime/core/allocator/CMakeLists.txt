# Copyright (c) 2023, AgiBot Inc.
# All rights reserved.

# Get the current folder name
string(REGEX REPLACE ".*/\(.*\)" "\\1" CUR_DIR ${CMAKE_CURRENT_SOURCE_DIR})

# Get namespace
get_namespace(CUR_SUPERIOR_NAMESPACE)
message(STATUS ${CUR_DIR}"-CUR_SUPERIOR_NAMESPACE: ${CUR_SUPERIOR_NAMESPACE}")
string(REPLACE "::" "_" CUR_SUPERIOR_NAMESPACE_UNDERLINE ${CUR_SUPERIOR_NAMESPACE})


# Set target name
set(CUR_TARGET_NAME ${CUR_SUPERIOR_NAMESPACE_UNDERLINE}_${CUR_DIR})#内部使用的下划线形式
set(CUR_TARGET_ALIAS_NAME ${CUR_SUPERIOR_NAMESPACE}::${CUR_DIR})#外部引用的命名空间形式

# Set file collection
file(GLOB head_files ${CMAKE_CURRENT_SOURCE_DIR}/*.h)
file(GLOB src ${CMAKE_CURRENT_SOURCE_DIR}/*.cc)
file(GLOB test_files ${CMAKE_CURRENT_SOURCE_DIR}/*_test.cc)
list(REMOVE_ITEM src ${test_files})

# Add target - changed to OBJECT library
add_library(${CUR_TARGET_NAME} OBJECT)
add_library(${CUR_TARGET_ALIAS_NAME} ALIAS ${CUR_TARGET_NAME})

# Enable position independent code for the OBJECT library
set_property(TARGET ${CUR_TARGET_NAME} PROPERTY POSITION_INDEPENDENT_CODE ON)

# Set source file of target
target_sources(${CUR_TARGET_NAME} 
    PRIVATE ${src}
    PUBLIC FILE_SET HEADERS BASE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/.. FILES ${head_files})

# Set include path of target
target_include_directories(
  ${CUR_TARGET_NAME}
  PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../..>
         $<INSTALL_INTERFACE:include/aimrt>)

# Set link libraries of target
target_link_libraries(
  ${CUR_TARGET_NAME}
  PUBLIC yaml-cpp::yaml-cpp
         aimrt::interface::aimrt_module_cpp_interface)

# Add -Werror option
include(AddWerror)
add_werror(${CUR_TARGET_NAME})

# Set version of target
target_compile_definitions(${CUR_TARGET_NAME} PUBLIC AIMRT_VERSION="${AIMRT_VERSION}")

# Set test of target
if(AIMRT_BUILD_TESTS AND test_files)
  add_gtest_target(TEST_TARGET ${CUR_TARGET_NAME} TEST_SRC ${test_files})
endif()
